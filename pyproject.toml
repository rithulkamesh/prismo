[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "pyprismo"
description = "A high-performance Python-based FDTD solver for waveguide photonics"
authors = [{ name = "Rithul Kamesh", email = "hello@rithul.dev" }]
readme = "README.md"
license = { file = "LICENSE" }
keywords = ["fdtd", "photonics", "waveguide", "electromagnetic", "simulation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Mathematics",
]
requires-python = ">=3.9"
dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "matplotlib>=3.4.0",
    "h5py>=3.0.0",
    "pydantic>=2.0.0",
    "tqdm>=4.60.0",
    "rich>=10.0.0",
    "polars>=0.20.0",
    "psutil>=5.9.0",
]
dynamic = ["version"]

[project.optional-dependencies]
# Performance acceleration
acceleration = [
    "numba>=0.58.0",
    "cupy-cuda12x>=12.0.0;platform_machine=='x86_64'",
]
# Visualization and analysis
visualization = [
    "plotly>=5.0.0",
    "mayavi>=4.7.0",
    "vtk>=9.0.0",
    "pyvista>=0.32.0",
]
# Development dependencies
dev = [
    "pytest>=6.2.0",
    "pytest-cov>=3.0.0",
    "pytest-xdist>=2.5.0",
    "pytest-benchmark>=3.4.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "pre-commit>=2.15.0",
    "ruff>=0.1.0",
]
# Documentation
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-autodoc-typehints>=1.12.0",
    "myst-parser>=0.17.0",
    "nbsphinx>=0.8.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
]
# All optional dependencies
all = ["prismo[acceleration,visualization,dev,docs]"]

[project.urls]
Homepage = "https://github.com/rithulkamesh/prismo"
Documentation = "https://prismo.readthedocs.io"
Repository = "https://github.com/rithulkamesh/prismo.git"
Issues = "https://github.com/rithulkamesh/prismo/issues"

[project.scripts]
prismo = "prismo.cli:main"

# Hatchling configuration
[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["src/prismo"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
    "/examples",
    "/benchmarks",
    "README.md",
    "LICENSE",
]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["prismo"]

# Ruff configuration
# Ruff configuration
[tool.ruff]
target-version = "py39"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

# MyPy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["numba.*", "cupy.*", "mayavi.*", "vtk.*", "pyvista.*"]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["--strict-markers", "--strict-config"]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU acceleration",
    "benchmark: marks performance benchmark tests",
    "integration: marks integration tests",
    "validation: marks validation tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src/prismo"]
branch = true
omit = ["*/tests/*", "*/test_*.py", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
